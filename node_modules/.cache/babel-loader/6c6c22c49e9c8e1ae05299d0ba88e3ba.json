{"ast":null,"code":"import _createForOfIteratorHelper from\"/home/ava/Documents/newdash/auto-dash/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createForOfIteratorHelper\";var metadata=require('./data/metadata.json');var fixVersion=metadata[\"fixVersion\"];var std_lbls=metadata[\"standard\"];var ext_lbls=metadata[\"extensions\"];var ps1_lbls=metadata[\"ps_extensions_active\"];var ps2_lbls=metadata[\"ps_extensions_retired\"];var all_labels=std_lbls.concat(ext_lbls).concat(ps1_lbls).concat(ps2_lbls);var lblsToDisplay=removeTestCaseFromLabel(std_lbls).concat(removeTestCaseFromLabel(ext_lbls)).concat(removeTestCaseFromLabel(ps1_lbls)).concat(removeTestCaseFromLabel(ps2_lbls));var std_to_auto=require('./data/standard_label_to_automated_issue_ids.json');var ext_to_auto=require('./data/extensions_label_to_automated_issue_ids.json');var ps1_to_auto=require('./data/ps_extensions_active_label_to_automated_issue_ids.json');var ps2_to_auto=require('./data/ps_extensions_retired_label_to_automated_issue_ids.json');var std_to_cycle=require('./data/standard_label_to_cycled_issue_ids.json');var ext_to_cycle=require('./data/extensions_label_to_cycled_issue_ids.json');var ps1_to_cycle=require('./data/ps_extensions_active_label_to_cycled_issue_ids.json');var ps2_to_cycle=require('./data/ps_extensions_retired_label_to_cycled_issue_ids.json');var std_to_status=require('./data/standard_label_to_execution_statuses.json');var ext_to_status=require('./data/extensions_label_to_execution_statuses.json');var ps1_to_status=require('./data/ps_extensions_active_label_to_execution_statuses.json');var ps2_to_status=require('./data/ps_extensions_retired_label_to_execution_statuses.json');var ext_to_cycle_adhoc=require('./data/extensions_label_to_cycled_issue_ids_adhoc.json');var ext_to_status_adhoc=require('./data/extensions_label_to_execution_statuses_adhoc.json');var ps1_to_cycle_adhoc=require('./data/ps_extensions_active_label_to_cycled_issue_ids_adhoc.json');var ps1_to_status_adhoc=require('./data/ps_extensions_active_label_to_execution_statuses_adhoc.json');var ps2_to_cycle_adhoc=require('./data/ps_extensions_retired_label_to_cycled_issue_ids.json');var ps2_to_status_adhoc=require('./data/ps_extensions_retired_label_to_execution_statuses_adhoc.json');var std_to_cycle_adhoc=require('./data/standard_label_to_cycled_issue_ids_adhoc.json');var std_to_status_adhoc=require('./data/standard_label_to_execution_statuses_adhoc.json');var label_to_failed_tests_release=require('./data/label_to_failed_tests_release.json');var totalAutoPerLabel=[];// list of total automated test for all labels\nvar allAuto=new Set();// list of all unique automated issues\nvar allCycle=new Set();// list of all unique cycled issues \nvar total_automated_tests,total_missing_tests_count;var _iterator=_createForOfIteratorHelper(std_lbls),_step;try{for(_iterator.s();!(_step=_iterator.n()).done;){var _label9=_step.value;var _iterator19=_createForOfIteratorHelper(std_to_auto[_label9]),_step19;try{for(_iterator19.s();!(_step19=_iterator19.n()).done;){var _issue5=_step19.value;allAuto.add(_issue5);}}catch(err){_iterator19.e(err);}finally{_iterator19.f();}var _iterator20=_createForOfIteratorHelper(std_to_cycle[_label9]),_step20;try{for(_iterator20.s();!(_step20=_iterator20.n()).done;){var _issue6=_step20.value;allCycle.add(_issue6);}}catch(err){_iterator20.e(err);}finally{_iterator20.f();}totalAutoPerLabel.push(std_to_auto[_label9].length);}}catch(err){_iterator.e(err);}finally{_iterator.f();}var _iterator2=_createForOfIteratorHelper(ext_lbls),_step2;try{for(_iterator2.s();!(_step2=_iterator2.n()).done;){var _label10=_step2.value;var _iterator21=_createForOfIteratorHelper(ext_to_auto[_label10]),_step21;try{for(_iterator21.s();!(_step21=_iterator21.n()).done;){var _issue7=_step21.value;allAuto.add(_issue7);}}catch(err){_iterator21.e(err);}finally{_iterator21.f();}var _iterator22=_createForOfIteratorHelper(ext_to_cycle[_label10]),_step22;try{for(_iterator22.s();!(_step22=_iterator22.n()).done;){var _issue8=_step22.value;allCycle.add(_issue8);}}catch(err){_iterator22.e(err);}finally{_iterator22.f();}totalAutoPerLabel.push(ext_to_auto[_label10].length);}}catch(err){_iterator2.e(err);}finally{_iterator2.f();}var _iterator3=_createForOfIteratorHelper(ps1_lbls),_step3;try{for(_iterator3.s();!(_step3=_iterator3.n()).done;){var _label11=_step3.value;var _iterator23=_createForOfIteratorHelper(ps1_to_auto[_label11]),_step23;try{for(_iterator23.s();!(_step23=_iterator23.n()).done;){var _issue9=_step23.value;allAuto.add(_issue9);}}catch(err){_iterator23.e(err);}finally{_iterator23.f();}var _iterator24=_createForOfIteratorHelper(ps1_to_cycle[_label11]),_step24;try{for(_iterator24.s();!(_step24=_iterator24.n()).done;){var _issue10=_step24.value;allCycle.add(_issue10);}}catch(err){_iterator24.e(err);}finally{_iterator24.f();}totalAutoPerLabel.push(ps1_to_auto[_label11].length);}}catch(err){_iterator3.e(err);}finally{_iterator3.f();}var _iterator4=_createForOfIteratorHelper(ps2_lbls),_step4;try{for(_iterator4.s();!(_step4=_iterator4.n()).done;){var _label12=_step4.value;var _iterator25=_createForOfIteratorHelper(ps2_to_auto[_label12]),_step25;try{for(_iterator25.s();!(_step25=_iterator25.n()).done;){var _issue11=_step25.value;allAuto.add(_issue11);}}catch(err){_iterator25.e(err);}finally{_iterator25.f();}var _iterator26=_createForOfIteratorHelper(ps2_to_cycle[_label12]),_step26;try{for(_iterator26.s();!(_step26=_iterator26.n()).done;){var _issue12=_step26.value;allCycle.add(_issue12);}}catch(err){_iterator26.e(err);}finally{_iterator26.f();}totalAutoPerLabel.push(ps2_to_auto[_label12].length);}}catch(err){_iterator4.e(err);}finally{_iterator4.f();}total_automated_tests=getTotalAutomatedTests();total_missing_tests_count=allAuto.size-allCycle.size;// difference between lengths of allAuto set and allCycledIssues set\nvar status_to_nums={\"release\":{\"PASS\":[],\"FAIL\":[],\"WIP\":[],\"CONDITIONAL PASS\":[],\"UNEXECUTED\":[],\"BLOCKED\":[],\"NOT IN CYCLE\":[],\"CRC FAILURE\":[]},\"adhoc\":{\"PASS\":[],\"FAIL\":[],\"WIP\":[],\"CONDITIONAL PASS\":[],\"UNEXECUTED\":[],\"BLOCKED\":[],\"CRC FAILURE\":[]}};// get total automated test counts and num automated per label\nvar allCycledIssuesRelease=new Set();// list of all unique cycled issues no overlap\nvar allCycledIssuesAdhoc=new Set();// list of all unique cycled issues no overlap\nvar executionStatusPerLabelRelease;var executionStatusPerLabelAdhoc;var nonAdhocFailedTests;// to obe graphed\nvar statuses=[\"PASS\",\"FAIL\",\"CRC FAILURE\",\"WIP\",\"CONDITIONAL PASS\",\"UNEXECUTED\",\"BLOCKED\",\"NOT IN CYCLE\"];var all_adhoc_issues=[];//to check failed tests not added to adhoc\nvar nonAdhocFails=[];// maps label to 1782&38903&283 -> for url\nvar label_to_execution_status_lists=[std_to_status,ext_to_status,ps1_to_status,ps2_to_status];for(var _i=0,_label_to_execution_s=label_to_execution_status_lists;_i<_label_to_execution_s.length;_i++){var label_to_execution_status_list=_label_to_execution_s[_i];for(var label in label_to_execution_status_list){status_to_nums[\"release\"][\"PASS\"].push(label_to_execution_status_list[label][\"PASS\"]);status_to_nums[\"release\"][\"FAIL\"].push(label_to_execution_status_list[label][\"FAIL\"]);status_to_nums[\"release\"][\"CRC FAILURE\"].push(label_to_execution_status_list[label][\"CRC FAILURE\"]);status_to_nums[\"release\"][\"WIP\"].push(label_to_execution_status_list[label][\"WIP\"]);status_to_nums[\"release\"][\"CONDITIONAL PASS\"].push(label_to_execution_status_list[label][\"CONDITIONAL PASS\"]);status_to_nums[\"release\"][\"UNEXECUTED\"].push(label_to_execution_status_list[label][\"UNEXECUTED\"]);status_to_nums[\"release\"][\"BLOCKED\"].push(label_to_execution_status_list[label][\"BLOCKED\"]);status_to_nums[\"release\"][\"NOT IN CYCLE\"].push(label_to_execution_status_list[label][\"NOT IN CYCLE\"]);}}var label_to_execution_status_lists=[std_to_status_adhoc,ext_to_status_adhoc,ps1_to_status_adhoc,ps2_to_status_adhoc];for(var _i2=0,_label_to_execution_s2=label_to_execution_status_lists;_i2<_label_to_execution_s2.length;_i2++){var _label_to_execution_status_list=_label_to_execution_s2[_i2];for(var _label in _label_to_execution_status_list){status_to_nums[\"adhoc\"][\"PASS\"].push(_label_to_execution_status_list[_label][\"PASS\"]);status_to_nums[\"adhoc\"][\"FAIL\"].push(_label_to_execution_status_list[_label][\"FAIL\"]);status_to_nums[\"adhoc\"][\"CRC FAILURE\"].push(_label_to_execution_status_list[_label][\"CRC FAILURE\"]);status_to_nums[\"adhoc\"][\"WIP\"].push(_label_to_execution_status_list[_label][\"WIP\"]);status_to_nums[\"adhoc\"][\"CONDITIONAL PASS\"].push(_label_to_execution_status_list[_label][\"CONDITIONAL PASS\"]);status_to_nums[\"adhoc\"][\"UNEXECUTED\"].push(_label_to_execution_status_list[_label][\"UNEXECUTED\"]);status_to_nums[\"adhoc\"][\"BLOCKED\"].push(_label_to_execution_status_list[_label][\"BLOCKED\"]);}}var _iterator5=_createForOfIteratorHelper(std_lbls),_step5;try{for(_iterator5.s();!(_step5=_iterator5.n()).done;){var _label13=_step5.value;var _iterator27=_createForOfIteratorHelper(std_to_cycle[_label13]),_step27;try{for(_iterator27.s();!(_step27=_iterator27.n()).done;){var _issue13=_step27.value;allCycledIssuesRelease.add(_issue13);}}catch(err){_iterator27.e(err);}finally{_iterator27.f();}var _iterator28=_createForOfIteratorHelper(std_to_cycle_adhoc[_label13]),_step28;try{for(_iterator28.s();!(_step28=_iterator28.n()).done;){var _issue14=_step28.value;allCycledIssuesAdhoc.add(_issue14);}}catch(err){_iterator28.e(err);}finally{_iterator28.f();}var _iterator29=_createForOfIteratorHelper(std_to_cycle_adhoc[_label13]),_step29;try{for(_iterator29.s();!(_step29=_iterator29.n()).done;){var _issue15=_step29.value;if(!all_adhoc_issues.includes(_issue15))all_adhoc_issues.push(_issue15);}}catch(err){_iterator29.e(err);}finally{_iterator29.f();}}}catch(err){_iterator5.e(err);}finally{_iterator5.f();}var _iterator6=_createForOfIteratorHelper(ext_lbls),_step6;try{for(_iterator6.s();!(_step6=_iterator6.n()).done;){var _label14=_step6.value;var _iterator30=_createForOfIteratorHelper(ext_to_cycle[_label14]),_step30;try{for(_iterator30.s();!(_step30=_iterator30.n()).done;){var _issue16=_step30.value;allCycledIssuesRelease.add(_issue16);}}catch(err){_iterator30.e(err);}finally{_iterator30.f();}var _iterator31=_createForOfIteratorHelper(ext_to_cycle_adhoc[_label14]),_step31;try{for(_iterator31.s();!(_step31=_iterator31.n()).done;){var _issue17=_step31.value;allCycledIssuesAdhoc.add(_issue17);}}catch(err){_iterator31.e(err);}finally{_iterator31.f();}var _iterator32=_createForOfIteratorHelper(ext_to_cycle_adhoc[_label14]),_step32;try{for(_iterator32.s();!(_step32=_iterator32.n()).done;){var _issue18=_step32.value;if(!all_adhoc_issues.includes(_issue18))all_adhoc_issues.push(_issue18);}}catch(err){_iterator32.e(err);}finally{_iterator32.f();}}}catch(err){_iterator6.e(err);}finally{_iterator6.f();}var _iterator7=_createForOfIteratorHelper(ps1_lbls),_step7;try{for(_iterator7.s();!(_step7=_iterator7.n()).done;){var _label15=_step7.value;var _iterator33=_createForOfIteratorHelper(ps1_to_cycle[_label15]),_step33;try{for(_iterator33.s();!(_step33=_iterator33.n()).done;){var _issue19=_step33.value;allCycledIssuesRelease.add(_issue19);}}catch(err){_iterator33.e(err);}finally{_iterator33.f();}var _iterator34=_createForOfIteratorHelper(ps1_to_cycle_adhoc[_label15]),_step34;try{for(_iterator34.s();!(_step34=_iterator34.n()).done;){var _issue20=_step34.value;allCycledIssuesAdhoc.add(_issue20);}}catch(err){_iterator34.e(err);}finally{_iterator34.f();}var _iterator35=_createForOfIteratorHelper(ps1_to_cycle_adhoc[_label15]),_step35;try{for(_iterator35.s();!(_step35=_iterator35.n()).done;){var _issue21=_step35.value;if(!all_adhoc_issues.includes(_issue21))all_adhoc_issues.push(_issue21);}}catch(err){_iterator35.e(err);}finally{_iterator35.f();}}}catch(err){_iterator7.e(err);}finally{_iterator7.f();}var _iterator8=_createForOfIteratorHelper(ps2_lbls),_step8;try{for(_iterator8.s();!(_step8=_iterator8.n()).done;){var _label16=_step8.value;var _iterator36=_createForOfIteratorHelper(ps2_to_cycle[_label16]),_step36;try{for(_iterator36.s();!(_step36=_iterator36.n()).done;){var _issue22=_step36.value;allCycledIssuesRelease.add(_issue22);}}catch(err){_iterator36.e(err);}finally{_iterator36.f();}var _iterator37=_createForOfIteratorHelper(ps2_to_cycle_adhoc[_label16]),_step37;try{for(_iterator37.s();!(_step37=_iterator37.n()).done;){var _issue23=_step37.value;allCycledIssuesAdhoc.add(_issue23);}}catch(err){_iterator37.e(err);}finally{_iterator37.f();}var _iterator38=_createForOfIteratorHelper(ps2_to_cycle_adhoc[_label16]),_step38;try{for(_iterator38.s();!(_step38=_iterator38.n()).done;){var _issue24=_step38.value;if(!all_adhoc_issues.includes(_issue24))all_adhoc_issues.push(_issue24);}}catch(err){_iterator38.e(err);}finally{_iterator38.f();}}}catch(err){_iterator8.e(err);}finally{_iterator8.f();}executionStatusPerLabelRelease=[{label:'PASS',data:status_to_nums[\"release\"][\"PASS\"],backgroundColor:'#75B000'},{label:'FAIL',data:status_to_nums[\"release\"][\"FAIL\"],backgroundColor:'#CC3300'},{label:'CRC Failure',data:status_to_nums[\"release\"][\"CRC Failure\"],backgroundColor:'#ff6600'},{label:'WIP',data:status_to_nums[\"release\"][\"WIP\"],backgroundColor:'#F2B000'},{label:'CONDITIONAL PASS',data:status_to_nums[\"release\"][\"CONDITIONAL PASS\"],backgroundColor:'#ccff00'},{label:'UNEXECUTED',data:status_to_nums[\"release\"][\"UNEXECUTED\"],backgroundColor:'#A0A0A0'},{label:'BLOCKED',data:status_to_nums[\"release\"][\"BLOCKED\"],backgroundColor:'#6693B0'},{label:'NOT IN CYCLE',data:status_to_nums[\"release\"][\"NOT IN CYCLE\"],backgroundColor:'#A667D2'}];executionStatusPerLabelAdhoc=[{label:'PASS',data:status_to_nums[\"adhoc\"][\"PASS\"],backgroundColor:'#75B000'},{label:'FAIL',data:status_to_nums[\"adhoc\"][\"FAIL\"],backgroundColor:'#CC3300'},{label:'CRC Failure',data:status_to_nums[\"adhoc\"][\"CRC FAILURE\"],backgroundColor:'#ff6600'},{label:'WIP',data:status_to_nums[\"adhoc\"][\"WIP\"],backgroundColor:'#F2B000'},{label:'CONDITIONAL PASS',data:status_to_nums[\"adhoc\"][\"CONDITIONAL PASS\"],backgroundColor:'#ccff00'},{label:'UNEXECUTED',data:status_to_nums[\"adhoc\"][\"UNEXECUTED\"],backgroundColor:'#A0A0A0'},{label:'BLOCKED',data:status_to_nums[\"adhoc\"][\"BLOCKED\"],backgroundColor:'#6693B0'}];//get list of all tests added to adhoc\nvar label_to_failed_non_adhoc_issues={};var num_failed_non_adhoc_per_label=[];for(var _i3=0,_Object$keys=Object.keys(label_to_failed_tests_release);_i3<_Object$keys.length;_i3++){var _label2=_Object$keys[_i3];label_to_failed_non_adhoc_issues[_label2]=[];nonAdhocFails[_label2]='';var _iterator9=_createForOfIteratorHelper(label_to_failed_tests_release[_label2]),_step9;try{for(_iterator9.s();!(_step9=_iterator9.n()).done;){var issue=_step9.value;if(!all_adhoc_issues.includes(issue)){label_to_failed_non_adhoc_issues[_label2].push(issue);nonAdhocFails[_label2]=nonAdhocFails[_label2]+issue+\"%2C\";}}//remove the last &\n}catch(err){_iterator9.e(err);}finally{_iterator9.f();}if(nonAdhocFails[_label2].includes(\"%2C\"))nonAdhocFails[_label2]=nonAdhocFails[_label2].slice(0,nonAdhocFails[_label2].length-3);num_failed_non_adhoc_per_label.push(label_to_failed_non_adhoc_issues[_label2].length);}nonAdhocFailedTests=[{label:'NON ADHOC FAIL or CRC FAIL',data:num_failed_non_adhoc_per_label,backgroundColor:'#ff6666'}];// get total automated tests by summing the number of tests automated for each label (all labels under standard, extensions, ps extensions active and retired)\n// takes into account tests that have multiple labels assigned to them\nfunction getTotalAutomatedTests(){var allallAuto=[];var _iterator10=_createForOfIteratorHelper(std_lbls),_step10;try{for(_iterator10.s();!(_step10=_iterator10.n()).done;){var _label3=_step10.value;var _iterator14=_createForOfIteratorHelper(std_to_auto[_label3]),_step14;try{for(_iterator14.s();!(_step14=_iterator14.n()).done;){var _issue=_step14.value;if(!allallAuto.includes(_issue))allallAuto.push(_issue);}}catch(err){_iterator14.e(err);}finally{_iterator14.f();}}}catch(err){_iterator10.e(err);}finally{_iterator10.f();}var _iterator11=_createForOfIteratorHelper(ext_lbls),_step11;try{for(_iterator11.s();!(_step11=_iterator11.n()).done;){var _label4=_step11.value;var _iterator15=_createForOfIteratorHelper(ext_to_auto[_label4]),_step15;try{for(_iterator15.s();!(_step15=_iterator15.n()).done;){var _issue2=_step15.value;if(!allallAuto.includes(_issue2))allallAuto.push(_issue2);}}catch(err){_iterator15.e(err);}finally{_iterator15.f();}}}catch(err){_iterator11.e(err);}finally{_iterator11.f();}var _iterator12=_createForOfIteratorHelper(ps1_lbls),_step12;try{for(_iterator12.s();!(_step12=_iterator12.n()).done;){var _label5=_step12.value;var _iterator16=_createForOfIteratorHelper(ps1_to_auto[_label5]),_step16;try{for(_iterator16.s();!(_step16=_iterator16.n()).done;){var _issue3=_step16.value;if(!allallAuto.includes(_issue3))allallAuto.push(_issue3);}}catch(err){_iterator16.e(err);}finally{_iterator16.f();}}}catch(err){_iterator12.e(err);}finally{_iterator12.f();}var _iterator13=_createForOfIteratorHelper(ps2_lbls),_step13;try{for(_iterator13.s();!(_step13=_iterator13.n()).done;){var _label6=_step13.value;var _iterator17=_createForOfIteratorHelper(ps2_to_auto[_label6]),_step17;try{for(_iterator17.s();!(_step17=_iterator17.n()).done;){var _issue4=_step17.value;if(!allallAuto.includes(_issue4))allallAuto.push(_issue4);}}catch(err){_iterator17.e(err);}finally{_iterator17.f();}}}catch(err){_iterator13.e(err);}finally{_iterator13.f();}return allallAuto.length;}export function dynamicColorsList(lst){var colorList=[];for(var i in lst){var r=Math.floor(Math.random()*255);var g=Math.floor(Math.random()*255);var b=Math.floor(Math.random()*255);colorList.push(\"rgb(\"+r+\",\"+g+\",\"+b+\")\");}return colorList;};export function getNumAutomatedTestsForAllLabel(label_to_automated_issue_ids){var numAutomated=[];for(var _label7 in label_to_automated_issue_ids){numAutomated.push(label_to_automated_issue_ids[_label7].length);}return numAutomated;}export function removeTestCaseFromLabel(labelLst){var outLst=[];var _iterator18=_createForOfIteratorHelper(labelLst),_step18;try{for(_iterator18.s();!(_step18=_iterator18.n()).done;){var _label8=_step18.value;if(_label8.includes('_Test_Cases'))outLst.push(_label8.slice(0,_label8.length-11));else outLst.push(_label8);}}catch(err){_iterator18.e(err);}finally{_iterator18.f();}return outLst;}export{fixVersion,std_lbls,ext_lbls,ps1_lbls,ps2_lbls,all_labels,lblsToDisplay,std_to_auto,ext_to_auto,ps1_to_auto,ps2_to_auto,std_to_cycle,ext_to_cycle,ps1_to_cycle,ps2_to_cycle,std_to_status,ps1_to_status,ps2_to_status,ext_to_status,ext_to_cycle_adhoc,ext_to_status_adhoc,ps1_to_cycle_adhoc,ps1_to_status_adhoc,ps2_to_cycle_adhoc,ps2_to_status_adhoc,std_to_cycle_adhoc,std_to_status_adhoc,label_to_failed_tests_release,totalAutoPerLabel,allAuto,allCycle,total_automated_tests,total_missing_tests_count,allCycledIssuesRelease,allCycledIssuesAdhoc,all_adhoc_issues,executionStatusPerLabelRelease,executionStatusPerLabelAdhoc,nonAdhocFailedTests,status_to_nums,statuses,nonAdhocFails,label_to_execution_status_lists};","map":{"version":3,"sources":["/home/ava/Documents/newdash/auto-dash/src/Loader.js"],"names":["metadata","require","fixVersion","std_lbls","ext_lbls","ps1_lbls","ps2_lbls","all_labels","concat","lblsToDisplay","removeTestCaseFromLabel","std_to_auto","ext_to_auto","ps1_to_auto","ps2_to_auto","std_to_cycle","ext_to_cycle","ps1_to_cycle","ps2_to_cycle","std_to_status","ext_to_status","ps1_to_status","ps2_to_status","ext_to_cycle_adhoc","ext_to_status_adhoc","ps1_to_cycle_adhoc","ps1_to_status_adhoc","ps2_to_cycle_adhoc","ps2_to_status_adhoc","std_to_cycle_adhoc","std_to_status_adhoc","label_to_failed_tests_release","totalAutoPerLabel","allAuto","Set","allCycle","total_automated_tests","total_missing_tests_count","label","issue","add","push","length","getTotalAutomatedTests","size","status_to_nums","allCycledIssuesRelease","allCycledIssuesAdhoc","executionStatusPerLabelRelease","executionStatusPerLabelAdhoc","nonAdhocFailedTests","statuses","all_adhoc_issues","nonAdhocFails","label_to_execution_status_lists","label_to_execution_status_list","includes","data","backgroundColor","label_to_failed_non_adhoc_issues","num_failed_non_adhoc_per_label","Object","keys","slice","allallAuto","dynamicColorsList","lst","colorList","i","r","Math","floor","random","g","b","getNumAutomatedTestsForAllLabel","label_to_automated_issue_ids","numAutomated","labelLst","outLst"],"mappings":"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","sourcesContent":["let metadata = require('./data/metadata.json');\nlet fixVersion = metadata[\"fixVersion\"];\nlet std_lbls = metadata[\"standard\"];\nlet ext_lbls = metadata[\"extensions\"];\nlet ps1_lbls = metadata[\"ps_extensions_active\"];\nlet ps2_lbls = metadata[\"ps_extensions_retired\"];\nlet all_labels = std_lbls.concat(ext_lbls).concat(ps1_lbls).concat(ps2_lbls);\nlet lblsToDisplay = removeTestCaseFromLabel(std_lbls).concat(removeTestCaseFromLabel(ext_lbls)).concat(removeTestCaseFromLabel(ps1_lbls)).concat(removeTestCaseFromLabel(ps2_lbls));\n\nlet std_to_auto = require('./data/standard_label_to_automated_issue_ids.json');\nlet ext_to_auto = require('./data/extensions_label_to_automated_issue_ids.json');\nlet ps1_to_auto = require('./data/ps_extensions_active_label_to_automated_issue_ids.json');\nlet ps2_to_auto = require('./data/ps_extensions_retired_label_to_automated_issue_ids.json');\nlet std_to_cycle = require('./data/standard_label_to_cycled_issue_ids.json');\nlet ext_to_cycle = require('./data/extensions_label_to_cycled_issue_ids.json');\nlet ps1_to_cycle = require('./data/ps_extensions_active_label_to_cycled_issue_ids.json');\nlet ps2_to_cycle = require('./data/ps_extensions_retired_label_to_cycled_issue_ids.json');\nlet std_to_status = require('./data/standard_label_to_execution_statuses.json');\nlet ext_to_status = require('./data/extensions_label_to_execution_statuses.json');\nlet ps1_to_status = require('./data/ps_extensions_active_label_to_execution_statuses.json');\nlet ps2_to_status = require('./data/ps_extensions_retired_label_to_execution_statuses.json');\nlet ext_to_cycle_adhoc = require('./data/extensions_label_to_cycled_issue_ids_adhoc.json');\nlet ext_to_status_adhoc = require('./data/extensions_label_to_execution_statuses_adhoc.json');\nlet ps1_to_cycle_adhoc = require('./data/ps_extensions_active_label_to_cycled_issue_ids_adhoc.json');\nlet ps1_to_status_adhoc = require('./data/ps_extensions_active_label_to_execution_statuses_adhoc.json');\nlet ps2_to_cycle_adhoc = require('./data/ps_extensions_retired_label_to_cycled_issue_ids.json');\nlet ps2_to_status_adhoc = require('./data/ps_extensions_retired_label_to_execution_statuses_adhoc.json');\nlet std_to_cycle_adhoc = require('./data/standard_label_to_cycled_issue_ids_adhoc.json');\nlet std_to_status_adhoc = require('./data/standard_label_to_execution_statuses_adhoc.json');\nlet label_to_failed_tests_release = require('./data/label_to_failed_tests_release.json');\n\nlet totalAutoPerLabel = []; // list of total automated test for all labels\nlet allAuto = new Set(); // list of all unique automated issues\nlet allCycle = new Set(); // list of all unique cycled issues \nlet total_automated_tests, total_missing_tests_count;\n\n\nfor (const label of std_lbls) {\n  for (const issue of std_to_auto[label]) allAuto.add(issue);\n  for (const issue of std_to_cycle[label]) allCycle.add(issue);\n  totalAutoPerLabel.push(std_to_auto[label].length);\n}\nfor (const label of ext_lbls) {\n  for (const issue of ext_to_auto[label]) allAuto.add(issue);\n  for (const issue of ext_to_cycle[label]) allCycle.add(issue);\n  totalAutoPerLabel.push(ext_to_auto[label].length);\n}\nfor (const label of ps1_lbls) {\n  for (const issue of ps1_to_auto[label]) allAuto.add(issue);\n  for (const issue of ps1_to_cycle[label]) allCycle.add(issue);\n  totalAutoPerLabel.push(ps1_to_auto[label].length);\n}\nfor (const label of ps2_lbls) {\n  for (const issue of ps2_to_auto[label]) allAuto.add(issue);\n  for (const issue of ps2_to_cycle[label]) allCycle.add(issue);\n  totalAutoPerLabel.push(ps2_to_auto[label].length);\n}\n\ntotal_automated_tests = getTotalAutomatedTests();\ntotal_missing_tests_count = allAuto.size - allCycle.size; // difference between lengths of allAuto set and allCycledIssues set\n\nlet status_to_nums = {\n    \"release\": {\n        \"PASS\": [], \"FAIL\": [], \"WIP\": [], \"CONDITIONAL PASS\": [], \"UNEXECUTED\": [], \"BLOCKED\": [], \"NOT IN CYCLE\": [], \"CRC FAILURE\": []\n    }, \"adhoc\": {\n        \"PASS\": [], \"FAIL\": [], \"WIP\": [], \"CONDITIONAL PASS\": [], \"UNEXECUTED\": [], \"BLOCKED\": [], \"CRC FAILURE\": []\n    }  \n}\n\n// get total automated test counts and num automated per label\nlet allCycledIssuesRelease = new Set(); // list of all unique cycled issues no overlap\nlet allCycledIssuesAdhoc = new Set(); // list of all unique cycled issues no overlap\nlet executionStatusPerLabelRelease;\nlet executionStatusPerLabelAdhoc;\nlet nonAdhocFailedTests; // to obe graphed\nlet statuses = [\"PASS\", \"FAIL\", \"CRC FAILURE\", \"WIP\", \"CONDITIONAL PASS\", \"UNEXECUTED\", \"BLOCKED\", \"NOT IN CYCLE\"];\nlet all_adhoc_issues = []; //to check failed tests not added to adhoc\nlet nonAdhocFails = []; // maps label to 1782&38903&283 -> for url\nvar label_to_execution_status_lists = [std_to_status, ext_to_status, ps1_to_status, ps2_to_status];\n\nfor (const label_to_execution_status_list of label_to_execution_status_lists) {\n  for (const label in label_to_execution_status_list) {\n    status_to_nums[\"release\"][\"PASS\"].push(label_to_execution_status_list[label][\"PASS\"]);\n    status_to_nums[\"release\"][\"FAIL\"].push(label_to_execution_status_list[label][\"FAIL\"]);\n    status_to_nums[\"release\"][\"CRC FAILURE\"].push(label_to_execution_status_list[label][\"CRC FAILURE\"]);\n    status_to_nums[\"release\"][\"WIP\"].push(label_to_execution_status_list[label][\"WIP\"]);\n    status_to_nums[\"release\"][\"CONDITIONAL PASS\"].push(label_to_execution_status_list[label][\"CONDITIONAL PASS\"]);\n    status_to_nums[\"release\"][\"UNEXECUTED\"].push(label_to_execution_status_list[label][\"UNEXECUTED\"]);\n    status_to_nums[\"release\"][\"BLOCKED\"].push(label_to_execution_status_list[label][\"BLOCKED\"]);\n    status_to_nums[\"release\"][\"NOT IN CYCLE\"].push(label_to_execution_status_list[label][\"NOT IN CYCLE\"]);\n  }\n}\nvar label_to_execution_status_lists = [std_to_status_adhoc, ext_to_status_adhoc, ps1_to_status_adhoc, ps2_to_status_adhoc];\nfor (const label_to_execution_status_list of label_to_execution_status_lists) {\n  for (const label in label_to_execution_status_list) {\n    status_to_nums[\"adhoc\"][\"PASS\"].push(label_to_execution_status_list[label][\"PASS\"]);\n    status_to_nums[\"adhoc\"][\"FAIL\"].push(label_to_execution_status_list[label][\"FAIL\"]);\n    status_to_nums[\"adhoc\"][\"CRC FAILURE\"].push(label_to_execution_status_list[label][\"CRC FAILURE\"]);\n    status_to_nums[\"adhoc\"][\"WIP\"].push(label_to_execution_status_list[label][\"WIP\"]);\n    status_to_nums[\"adhoc\"][\"CONDITIONAL PASS\"].push(label_to_execution_status_list[label][\"CONDITIONAL PASS\"]);\n    status_to_nums[\"adhoc\"][\"UNEXECUTED\"].push(label_to_execution_status_list[label][\"UNEXECUTED\"]);\n    status_to_nums[\"adhoc\"][\"BLOCKED\"].push(label_to_execution_status_list[label][\"BLOCKED\"]);\n  }\n}\nfor (const label of std_lbls) {\n  for (const issue of std_to_cycle[label]) allCycledIssuesRelease.add(issue);\n  for (const issue of std_to_cycle_adhoc[label]) allCycledIssuesAdhoc.add(issue); \n  for (const issue of std_to_cycle_adhoc[label]) if (!(all_adhoc_issues.includes(issue))) all_adhoc_issues.push(issue);\n}\n\nfor (const label of ext_lbls) {\n  for (const issue of ext_to_cycle[label]) allCycledIssuesRelease.add(issue);\n  for (const issue of ext_to_cycle_adhoc[label]) allCycledIssuesAdhoc.add(issue); \n  for (const issue of ext_to_cycle_adhoc[label]) if (!(all_adhoc_issues.includes(issue))) all_adhoc_issues.push(issue);\n}\n\nfor (const label of ps1_lbls) {\n  for (const issue of ps1_to_cycle[label]) allCycledIssuesRelease.add(issue);\n  for (const issue of ps1_to_cycle_adhoc[label]) allCycledIssuesAdhoc.add(issue); \n  for (const issue of ps1_to_cycle_adhoc[label]) if (!(all_adhoc_issues.includes(issue))) all_adhoc_issues.push(issue);\n}\nfor (const label of ps2_lbls) {\n  for (const issue of ps2_to_cycle[label]) allCycledIssuesRelease.add(issue);\n  for (const issue of ps2_to_cycle_adhoc[label]) allCycledIssuesAdhoc.add(issue);\n  for (const issue of ps2_to_cycle_adhoc[label]) if (!(all_adhoc_issues.includes(issue))) all_adhoc_issues.push(issue);\n}\n\nexecutionStatusPerLabelRelease = [\n  { label: 'PASS', data: status_to_nums[\"release\"][\"PASS\"], backgroundColor: '#75B000' },\n  { label: 'FAIL', data: status_to_nums[\"release\"][\"FAIL\"], backgroundColor: '#CC3300' },\n  { label: 'CRC Failure', data: status_to_nums[\"release\"][\"CRC Failure\"], backgroundColor: '#ff6600' },\n  { label: 'WIP', data: status_to_nums[\"release\"][\"WIP\"], backgroundColor: '#F2B000' },\n  { label: 'CONDITIONAL PASS', data: status_to_nums[\"release\"][\"CONDITIONAL PASS\"], backgroundColor: '#ccff00' },\n  { label: 'UNEXECUTED', data: status_to_nums[\"release\"][\"UNEXECUTED\"], backgroundColor: '#A0A0A0' },\n  { label: 'BLOCKED', data: status_to_nums[\"release\"][\"BLOCKED\"], backgroundColor: '#6693B0' },\n  { label: 'NOT IN CYCLE', data: status_to_nums[\"release\"][\"NOT IN CYCLE\"], backgroundColor: '#A667D2' },\n]\nexecutionStatusPerLabelAdhoc = [\n  { label: 'PASS', data: status_to_nums[\"adhoc\"][\"PASS\"], backgroundColor: '#75B000' },\n  { label: 'FAIL', data: status_to_nums[\"adhoc\"][\"FAIL\"], backgroundColor: '#CC3300' },\n  { label: 'CRC Failure', data: status_to_nums[\"adhoc\"][\"CRC FAILURE\"], backgroundColor: '#ff6600' },\n  { label: 'WIP', data: status_to_nums[\"adhoc\"][\"WIP\"], backgroundColor: '#F2B000' },\n  { label: 'CONDITIONAL PASS', data: status_to_nums[\"adhoc\"][\"CONDITIONAL PASS\"], backgroundColor: '#ccff00' },\n  { label: 'UNEXECUTED', data: status_to_nums[\"adhoc\"][\"UNEXECUTED\"], backgroundColor: '#A0A0A0' },\n  { label: 'BLOCKED', data: status_to_nums[\"adhoc\"][\"BLOCKED\"], backgroundColor: '#6693B0' }\n]\n\n//get list of all tests added to adhoc\nvar label_to_failed_non_adhoc_issues = {}\nvar num_failed_non_adhoc_per_label = []\nfor (const label of Object.keys(label_to_failed_tests_release)) {\n  label_to_failed_non_adhoc_issues[label] = []\n  nonAdhocFails[label] = ''\n  for (const issue of label_to_failed_tests_release[label]) {\n    if (!all_adhoc_issues.includes(issue)) {\n      label_to_failed_non_adhoc_issues[label].push(issue);\n      nonAdhocFails[label] = nonAdhocFails[label] + issue + \"%2C\";\n    }\n  }\n  //remove the last &\n  if (nonAdhocFails[label].includes(\"%2C\"))\n    nonAdhocFails[label] = nonAdhocFails[label].slice(0, nonAdhocFails[label].length - 3)\n  num_failed_non_adhoc_per_label.push(label_to_failed_non_adhoc_issues[label].length)\n}\nnonAdhocFailedTests = [\n  {\n    label: 'NON ADHOC FAIL or CRC FAIL', data: num_failed_non_adhoc_per_label, backgroundColor: '#ff6666'\n  }\n]\n\n// get total automated tests by summing the number of tests automated for each label (all labels under standard, extensions, ps extensions active and retired)\n// takes into account tests that have multiple labels assigned to them\nfunction getTotalAutomatedTests() {\n  var allallAuto = [];\n  for (const label of std_lbls) {\n    for (const issue of std_to_auto[label]) if (!allallAuto.includes(issue)) allallAuto.push(issue)\n  }\n  for (const label of ext_lbls) {\n    for (const issue of ext_to_auto[label]) {\n      if (!allallAuto.includes(issue)) allallAuto.push(issue)\n    }\n  }\n  for (const label of ps1_lbls) {\n    for (const issue of ps1_to_auto[label]) {\n      if (!allallAuto.includes(issue)) allallAuto.push(issue)\n    }\n  }\n  for (const label of ps2_lbls) {\n    for (const issue of ps2_to_auto[label]) {\n      if (!allallAuto.includes(issue)) allallAuto.push(issue)\n    }\n  }\n  return allallAuto.length;\n}\n\nexport function dynamicColorsList(lst) {\n    var colorList = [];\n    for (var i in lst) {\n        var r = Math.floor(Math.random() * 255);\n        var g = Math.floor(Math.random() * 255);\n        var b = Math.floor(Math.random() * 255);\n        colorList.push(\"rgb(\" + r + \",\" + g + \",\" + b + \")\");\n    }\n    return colorList;\n};\n\nexport function getNumAutomatedTestsForAllLabel(label_to_automated_issue_ids) {\n    var numAutomated = [];\n    for (const label in label_to_automated_issue_ids) numAutomated.push(label_to_automated_issue_ids[label].length);\n    return numAutomated;\n}\n\nexport function removeTestCaseFromLabel(labelLst) {\n    var outLst = []\n    for (const label of labelLst) {\n        if (label.includes('_Test_Cases'))\n        outLst.push(label.slice(0, label.length - 11))\n        else\n        outLst.push(label)\n    }\n    return outLst;\n}\n\nexport { fixVersion, \n        std_lbls, ext_lbls, ps1_lbls, ps2_lbls, all_labels, lblsToDisplay, \n        std_to_auto, ext_to_auto, ps1_to_auto, ps2_to_auto, \n        std_to_cycle, ext_to_cycle, ps1_to_cycle, ps2_to_cycle, \n        std_to_status, ps1_to_status, ps2_to_status, ext_to_status, \n        ext_to_cycle_adhoc, ext_to_status_adhoc, ps1_to_cycle_adhoc, ps1_to_status_adhoc, ps2_to_cycle_adhoc, \n        ps2_to_status_adhoc, std_to_cycle_adhoc ,std_to_status_adhoc, \n        label_to_failed_tests_release,\n        totalAutoPerLabel, allAuto, allCycle, total_automated_tests, total_missing_tests_count, \n        allCycledIssuesRelease, allCycledIssuesAdhoc, all_adhoc_issues, \n        executionStatusPerLabelRelease, executionStatusPerLabelAdhoc, \n        nonAdhocFailedTests, status_to_nums, statuses, nonAdhocFails, label_to_execution_status_lists };\n\n    "]},"metadata":{},"sourceType":"module"}